<?php
    $PAGE_NAME = 'HTML Syntax';
    require_once($_SERVER["DOCUMENT_ROOT"].'/generichead.php');
?>
<main>
	<section>
		<p>The syntax of HTML code is comparatively simple and un-demanding compared to most programming languages. Tabbing is not enforced, uncontained text can just be left within the document and even displayed normally if no other mistakes are made, capitalization and page breaks are ignored, and it is often possible to list things out of order, especially when defining attributes and setting things in the head of the document. However, this simplicity is also a bit deceptive, because there are also cases where the order does matter, especially when it comes to accounting for the fact that tags are acted upon as the page loads, rather than after it has fully finished.</p>
	</section>
	<section>
		<h4>Elements/Tags and Attributes</h4>
		<p>Elements/Tags are the most basic type of command in HTML. Element is synonymous with tag, they both function the same in code terms, the distinction is purely in terms of how they display in the web browser. In general, an element is a solid, distinct thing, such as this section with the border around it, while a tag is an inline modifier for something, such as <mark>highlighting</mark> for text, but in the context of this page, I will use only the word element. Every element must be formatted as <code>&lt;<i>element</i>&gt;</code> to begin the element, and <code>&lt;/<i>element</i>&gt;</code> to close it. Some rare elements do not need to be closed, but most do. Other elements may be opened before the first element is closed, which causes them to be considered children of the unclosed elements above them. Depending on the parent element, this can significantly alter their appearance and function, since the normal HTML behavior of every one of their parents is passed down, as are applicable style rules such as margins, text color, and more complex things. It is considered "good practice", an optimal way of writing your page, to close elements as soon as they no longer apply; additionally, a principle known as "clear heredity" states that every child element should be closed <em>before</em> the parent element.
		<p>Elements are the most basic type of command in HTML, and attributes are additional modifiers to their behavior. Every element must be formatted as <code>&lt;<i>element</i>&gt;</code>, and if desired, attributes may be set like this: <code>&lt;<i>element</i> <i>attribute</i>="<i>value</i>"&gt;</code>. Each set of &lt;&gt;s can only contain one element, but can contain as many attributes as desired, separated by a space. Each attribute may only have one value set, but in some cases, where the value of the attribute is being interpreted by another type of code such as CSS, or another program such as a search engine, it may be treated as multiple values. The most common example here is the <code>class</code> attribute, which is used by CSS to associate the element with specific style rules. If you had a stylesheet with classes for elements with no margins, and elements with a different textcolor, you could format an element's <code>class</code> attribute as <code>class="blueText noMargins"</code>. To the web browser, the value of <code>class</code> is <code>blueText no Margins</code>, but the CSS stylesheet will interpret the space as meaning you want <code>.blueText</code> <em>and</em> <code>.noMargins</code>.</p> There are other exceptions of this kind, and they will be documented along with the attributes in question.
</main>	
<?php
    require_once($_SERVER["DOCUMENT_ROOT"].'/genericfoot.php');
?>
